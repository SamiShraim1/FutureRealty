@model ContactMessagesVM

@section Header {
    message Details
}

<div class="col-md-12">
    <div class="card card-primary">
        <div class="card-header">
            <h3 class="card-title">Details for message</h3>
        </div>
        <ul>
            <li> Name : @Model.Name </li>
            <li> Email : @Model.Email</li>

            <li>
                @Html.AntiForgeryToken()

                Status: @(Model.InWork ? "The status is 'The customer has been spoken to.' Do you want to mark him as having to talk to him again?" : "The status is 'The customer is waiting'. Do you want to mark that you talked to him?")
                <button onclick="toggleStatus(@Model.Id)" class="btn btn-primary btn-sm">Yes</button>
            </li>

            <li> SentAt : @Model.SentAt </li>
        </ul>
        <ul>
            <li> Subject : @Model.Subject </li>
            <li> Message : @Model.Message </li>
        </ul>
            
        
    </div>
</div>

<script>
function toggleStatus(id) {
    Swal.fire({
        title: "Are you sure?",
        text: "This will change the current status.",
        icon: "warning",
        showCancelButton: true,
        confirmButtonColor: "#3085d6",
        cancelButtonColor: "#d33",
        confirmButtonText: "Yes, change it!"
    }).then((result) => {
        if (result.isConfirmed) {
            fetch(`/Dashboard/ContactMessages/ToggleStatus/${id}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-CSRF-TOKEN': document.querySelector('input[name="__RequestVerificationToken"]').value
                }
            })
            .then(response => response.json())
            .then(data => {
                if (data.message === 'status updated') {
                    Swal.fire({
                        title: "Updated!",
                        text: "Status has been successfully updated.",
                        icon: "success"
                    }).then(() => {
                        // رفرش الصفحة بعد النقر على OK
                        location.reload();
                    });
                } else {
                    Swal.fire({
                        title: "Failed",
                        text: "Could not update the status.",
                        icon: "error"
                    });
                }
            })
            .catch(error => {
                Swal.fire({
                    title: "Error",
                    text: "An error occurred while updating the status.",
                    icon: "error"
                });
            });
        }
    });
}


</script>